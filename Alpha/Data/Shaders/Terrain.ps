/////////////
// GLOBALS //
/////////////
Texture2D Textures[4];
SamplerState SampleType;

cbuffer LightBuffer
{
	float4 ambiantColor;
    float4 diffuseColor;
    float3 lightDirection;
	float padding;
};

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
	float4 weights : TEXCOORD1;
    float3 normal : NORMAL;
	float fogFactor : FOG;
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 TerrainPixelShader(PixelInputType input) : SV_TARGET
{
    float lightIntensity = saturate(dot(input.normal, -lightDirection));
	
	float4 textureColor = input.weights.x * Textures[0].Sample(SampleType, input.tex) 
						+ input.weights.y * Textures[1].Sample(SampleType, input.tex) 
						+ input.weights.z * Textures[2].Sample(SampleType, input.tex) 
						+ input.weights.w * Textures[3].Sample(SampleType, input.tex);

    float4 pixelColor = (ambiantColor + (diffuseColor * lightIntensity)) * textureColor;

	//return pixelColor;
	return lerp(pixelColor, float4(0.75,0.75,0.75,1), 1-input.fogFactor);
}